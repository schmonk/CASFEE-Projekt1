@import url('reset.css');
@font-face {
  font-family: 'Metropolis';
  src: url(../fonts/Metropolis-Font/Metropolis-Regular.otf);
}


:root {
  --bg-color: hsl(0, 0%, 92%);
  --primary-text-color: rgb(28, 28, 28);
  --primary-text-disabled-color: hsl(0, 0%, 75%);
  --primary-color: hsl(202, 100%, 71%);
  --primary-hover: hsl(202, 100%, 61%);
  --on-bg-container:hsl(0, 0%, 94%); 
  --on-bg-selected: hsl(0, 0%, 80%);
  --on-bg-selected-hover: hsl(0, 0%, 74%);
  --outline-color: rgb(194, 194, 194);
  --on-bg-hover: hsl(0, 0%, 86%);
  --transition-function: ease-in-out;
  --transition-duration: 0.2s;
}
.dark-theme {
  transition: all var(--transition-duration) var(--transition-function);
  --bg-color: hsl(0, 0%, 14%);
  --primary-text-color: rgb(235, 235, 235);
  --primary-text-disabled-color: hsl(0, 0%, 24%);
  --outline-color: rgb(100, 100, 100);
  --primary-color: hsl(202, 100%, 25%);
  --primary-hover: hsl(202, 100%, 35%);
  --on-bg-container:hsl(0, 0%, 18%); 
  --on-bg-selected: hsl(0, 0%, 26%);
  --on-bg-selected-hover: hsl(0, 0%, 32%);
  --on-bg-hover: hsl(0, 0%, 20%);
}

body {
  font-family: 'Metropolis', sans-serif;
  transition: all var(--transition-duration) var(--transition-function);
  background-color: var(--bg-color);
  color: var(--primary-text-color);
}

button,
select,
input {
  transition: background-color var(--transition-duration)
      var(--transition-function),
    color var(--transition-duration) var(--transition-function);
  padding: 0.4rem 1rem;
  border: 1px solid var(--outline-color);
  background-color: transparent;
  color: var(--primary-text-color);
  border-radius: 0.4rem;
  min-height: 2.4rem;
}

button:hover,
select:hover,
input:hover {
  background-color: var(--on-bg-hover);
}

.container {
  display: grid;
  grid-template-rows: 4fr 2fr 40fr 1fr;
  padding: 2rem;
  height: 100%;
  max-width: 1280px;
  margin-left: auto;
  margin-right: auto;
  gap: 1rem;
}

.btn-primary {
  background-color: var(--primary-color);
  border: none;
}
.btn-primary:hover {
  background-color: var(--primary-hover);
}

.sorting-active,
.filtering-active {
  border: 1px solid var(--outline-color);
  background-color: var(--on-bg-selected)
}
.sorting-active:hover,
.filtering-active:hover {
  background-color: var(--on-bg-selected-hover)
}

.ascending::after {
  content: '↑';
}

.descending::after {
  content: '↓';
}

.sorting-active:hover {
  background-color: color-mix(
    in hsl longer hue,
    var(--on-bg-hover),
    var(--on-bg-selected)
  );
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.leftGroup {
  display: flex;
  gap: 2rem;
  align-items: center;
}

.utility {
  display: flex;
  justify-content: space-between;
}

.filterSort-container {
  width: 100%;
  padding: 1rem;
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  gap: 1rem;
}

.task-list {
  display: flex;
  flex-direction: column;
  gap: 0.4rem;
}

.task-container {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  /* grid-template-rows: repeat(2, 1fr); */
  background-color: var(--on-bg-container);
  min-width: 4rem;
  justify-content: center;
  align-items: center;
  border: 1px solid var(--outline-color);
  border-radius: 0.6rem;
  padding: 1rem;
  gap: 1rem;
}

.task-content {
  /* display: flex;
  flex-direction: column;
  gap: 1rem;*/
  align-items: center; 
}

.task-done {
  opacity: 0.3;
}

/* Create and edit dialog */
.taskDialog {
  background-color: var(--bg-color);
  color: var(--primary-text-color);
  width: 36em;
  border: 1px solid var(--outline-color);
  border-radius: 0.6rem;
  margin: 5em auto;
  padding: 2rem 2rem;
}
.task-description {
  grid-column: 2 ;
}
.taskDialog h2 {
  margin-bottom: 1rem;
}
.taskInput {
  display: flex;
  flex-direction: column;
  padding: 1rem 0rem;
}

.taskInput input {
  width: 100%;
  margin-top: 0.4rem;
}

input[type='checkbox'] {
  width: 2rem;
}

dialog::backdrop {
  background: hsla(0, 0%, 8%, 0.9);
}

#taskDialogButtons {
  margin-top: 1rem;
  display: flex;
  flex-direction: row;
  justify-content: end;
  gap: 0.4rem;
} 

.completed {
  color: var(--primary-text-disabled-color);
  border-color: var(--primary-text-disabled-color);
}

.hidden {
  display: none;
}