@font-face {
  font-family: 'Metropolis';
  src: url(/source/public/fonts/Metropolis-Font/Metropolis-Regular.otf);
}

/* Use reset from https://www.joshwcomeau.com/css/custom-css-reset/ */
/*
  1. Use a more-intuitive box-sizing model.
*/
*,
*::before,
*::after {
  box-sizing: border-box;
}
/*
    2. Remove default margin
  */
* {
  margin: 0;
}
/*
    3. Allow percentage-based heights in the application
  */
html,
body {
  height: 100%;
}
/*
    Typographic tweaks!
    4. Add accessible line-height
    5. Improve text rendering
  */
body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
}
/*
    6. Improve media defaults
  */
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}
/*
    7. Remove built-in form typography styles
  */
input,
button,
textarea,
select {
  font: inherit;
}
/*
    8. Avoid text overflows
  */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}
/*
    9. Create a root stacking context
  */
#root,
#__next {
  isolation: isolate;
}
:root {
  --bg-color: hsl(0, 0%, 92%);
  --primary-color: rgb(28, 28, 28);
  --outline-color: rgb(194, 194, 194);
  --on-bg-hover: hsl(0, 0%, 80%);
  --transition-function: ease-in-out;
  --transition-duration: 0.2s;
}
.dark-theme {
  transition: all var(--transition-duration) var(--transition-function);
  --bg-color: rgb(28, 28, 28);
  --primary-color: rgb(235, 235, 235);
  --outline-color: rgb(100, 100, 100);
  --on-bg-hover: hsl(0, 0%, 20%);
}

body {
  font-family: 'Metropolis', sans-serif;
  transition: all var(--transition-duration) var(--transition-function);
  background-color: var(--bg-color);
  color: var(--primary-color);
}

button,
select,
input {
  transition: background-color var(--transition-duration)
      var(--transition-function),
    color var(--transition-duration) var(--transition-function);
  padding: 0.4rem 1rem;
  border: 1px solid var(--outline-color);
  background-color: var(--bg-color);
  color: var(--primary-color);
  border-radius: 0.4rem;
  min-height: 2.4rem;
}

button:hover,
select:hover {
  background-color: var(--on-bg-hover);
}

.container {
  display: grid;
  grid-template-rows: 2fr 2fr 40fr 1fr;
  padding: 2rem;
  height: 100%;
}

.header {
  display: flex;
  justify-content: space-between;
}

.utility {
  display: flex;
  justify-content: space-between;
}

.filterSort {
  display: flex;
  gap: 1rem;
}

.articles-list {
  display: flex;
  flex-direction: column;
  gap: 0.4rem;
}

.task-container {
  display: flex;
  align-items: center;
  height: 4rem;
  justify-content: space-between;
  border: 1px solid var(--outline-color);
  border-radius: 0.6rem;
  padding: 2rem 1rem;
}

.task-content {
  display: flex;
  gap: 1rem;
  align-items: center;
}

.task-done {
  opacity: 0.6;
}

#taskDialog {
  background-color: var(--bg-color);
  color: var(--primary-color);
  width: 36em;
  border: 1px solid var(--outline-color);
  border-radius: 0.6rem;
  margin: 5em auto;
  padding: 1rem 2rem;
}
#taskDialog h3 {
  margin-bottom: 1rem;
}
.taskInput {
  padding: 0.4rem 0rem;
}
dialog::backdrop {
  background: hsla(0, 0%, 25%, 0.9);
}

#taskDialogButtons {
  display: flex;
  flex-direction: row;
  justify-content: end;
  gap: 0.4rem;
}
